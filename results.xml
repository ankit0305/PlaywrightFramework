<testsuites id="" name="" tests="36" failures="3" skipped="2" errors="0" time="124.700057">
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="0" skipped="0" time="9.68" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="9.68">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="pw-webkit:latest:MacOS Monterey@lambdatest" tests="1" failures="0" skipped="0" time="7.084" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="7.084">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="0" skipped="0" time="18.61" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="18.61">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Api/servers.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="2" failures="0" skipped="0" time="4.769" errors="0">
<testcase name="Servers › Should add a server" classname="Effiziente/Api/servers.spec.ts" time="2.073">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;2&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;Moore and Sons&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;https://unlawful-consumer.com&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Row with the key: 2 exists">
</property>
</properties>
</testcase>
<testcase name="Servers › Should edit a server" classname="Effiziente/Api/servers.spec.ts" time="2.696">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="InputText" value="Fill: &quot;key&quot; with value: &quot;4&quot;">
</property>
<property name="InputText" value="Fill: &quot;Name&quot; with value: &quot;Rath, Dach and Wintheiser&quot;">
</property>
<property name="InputText" value="Fill: &quot;Url&quot; with value: &quot;https://cruel-lag.biz/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Row with the key: 4 exists">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="2.423" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="2.423">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="2" failures="0" skipped="0" time="12.523" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="7.914">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="4.609">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="3.158" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="3.158">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="4.621" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="4.621">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="6.494" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="6.494">
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.991" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="0.991">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.835" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="0.835">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.708" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.708">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Api/servers.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="2" failures="1" skipped="0" time="31.455" errors="0">
<testcase name="Servers › Should add a server" classname="Effiziente/Api/servers.spec.ts" time="26.63">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;2&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;Jaskolski and Sons&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;https://useless-disco.net&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
</properties>
<failure message="servers.spec.ts:12:9 Should add a server" type="FAILURE">
<![CDATA[  [firefox] › Effiziente/Api/servers.spec.ts:12:9 › Servers › Should add a server ──────────────────

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForCreateServer (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:19:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:28:58
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForGetServers (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:26:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:29:55
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForCreateServer (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:19:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:28:58
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForGetServers (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:26:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:29:55
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-firefox-retry1/trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Servers › Should edit a server" classname="Effiziente/Api/servers.spec.ts" time="4.825">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="InputText" value="Fill: &quot;key&quot; with value: &quot;4&quot;">
</property>
<property name="InputText" value="Fill: &quot;Name&quot; with value: &quot;Hilll, Reynolds and Tremblay&quot;">
</property>
<property name="InputText" value="Fill: &quot;Url&quot; with value: &quot;https://made-up-ruling.name/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Row with the key: 4 exists">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="0" time="2.399" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="2.399">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="2" failures="0" skipped="0" time="6.371" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="3.148">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="3.223">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="0" time="4.079" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="4.079">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="0" time="3.944" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="3.944">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0.247" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="0.247">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="0" time="1.337" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.337">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="0" time="0.942" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="0.942">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="firefox" tests="1" failures="0" skipped="0" time="0.622" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.622">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Api/servers.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="2" failures="2" skipped="0" time="57.862" errors="0">
<testcase name="Servers › Should add a server" classname="Effiziente/Api/servers.spec.ts" time="24.86">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;2&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;Stehr, Dooley and Schmidt&quot;">
</property>
<property name="InputText" value="Fill: &quot;&quot; with value: &quot;https://remarkable-detainment.com/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
</properties>
<failure message="servers.spec.ts:12:9 Should add a server" type="FAILURE">
<![CDATA[  [webkit] › Effiziente/Api/servers.spec.ts:12:9 › Servers › Should add a server ───────────────────

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForCreateServer (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:19:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:28:58
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForGetServers (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:26:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:29:55
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForCreateServer (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:19:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:28:58
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:32

      30 |      */
      31 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 32 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      33 |             && response.status() == statusCode);
      34 |         return responsePromise;
      35 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:32:43)
        at ServerApi.waitForGetServers (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:26:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:29:55
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:25:34

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Servers › Should edit a server" classname="Effiziente/Api/servers.spec.ts" time="33.002">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="InputText" value="Fill: &quot;key&quot; with value: &quot;4&quot;">
</property>
<property name="InputText" value="Fill: &quot;Name&quot; with value: &quot;Sawayn Group&quot;">
</property>
<property name="InputText" value="Fill: &quot;Url&quot; with value: &quot;https://hard-to-find-familiarity.com&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
</properties>
<failure message="servers.spec.ts:36:9 Should edit a server" type="FAILURE">
<![CDATA[  [webkit] › Effiziente/Api/servers.spec.ts:36:9 › Servers › Should edit a server ──────────────────

    TimeoutError: locator.innerText: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('tbody > tr').nth(5).locator('td').last()


       at ../components/TableComponent.ts:54

      52 |         for (let i = 0; i < totalRows; i++) {
      53 |             const row = this.page.locator('tbody > tr').nth(i);
    > 54 |             const columnValue = await row.locator('td').nth(index).innerText();
         |                                                                    ^
      55 |             if (columnValue == value)
      56 |                 return row;
      57 |         }

        at Table.getRowByColumnIndex (/home/runner/work/PlaywrightFramework/PlaywrightFramework/components/TableComponent.ts:54:68)
        at Table.getRowBykey (/home/runner/work/PlaywrightFramework/PlaywrightFramework/components/TableComponent.ts:77:21)
        at ServersPage.checkRow (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/serversPage.ts:70:21)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:61:9

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: locator.innerText: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('tbody > tr').nth(6).locator('td').last()


       at ../components/TableComponent.ts:54

      52 |         for (let i = 0; i < totalRows; i++) {
      53 |             const row = this.page.locator('tbody > tr').nth(i);
    > 54 |             const columnValue = await row.locator('td').nth(index).innerText();
         |                                                                    ^
      55 |             if (columnValue == value)
      56 |                 return row;
      57 |         }

        at Table.getRowByColumnIndex (/home/runner/work/PlaywrightFramework/PlaywrightFramework/components/TableComponent.ts:54:68)
        at Table.getRowBykey (/home/runner/work/PlaywrightFramework/PlaywrightFramework/components/TableComponent.ts:77:21)
        at ServersPage.checkRow (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/serversPage.ts:70:21)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:61:9

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-edit-a-server-webkit-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="0" time="5.14" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="5.14">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="2" failures="0" skipped="0" time="13.434" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="7.966">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="5.468">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="0" time="8.132" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="8.132">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="0" time="8.056" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="8.056">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0.485" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="0.485">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="0" time="2.764" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="2.764">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="0" time="1.947" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="1.947">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-20T04:39:58.005Z" hostname="webkit" tests="1" failures="0" skipped="0" time="0.857" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.857">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>