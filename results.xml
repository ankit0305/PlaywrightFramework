<testsuites id="" name="" tests="24" failures="3" skipped="0" errors="0" time="87.411099">
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="0" skipped="0" time="28.161" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="28.161">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="pw-webkit:latest:MacOS Monterey@lambdatest" tests="1" failures="0" skipped="0" time="34.479" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="34.479">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="0" skipped="0" time="12.079" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="12.079">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chromium" tests="1" failures="0" skipped="0" time="2.292" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="2.292">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chromium" tests="2" failures="0" skipped="0" time="4.488" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="2.13">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="2.358">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/synthetic.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chromium" tests="1" failures="1" skipped="0" time="8.979" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/synthetic.spec.ts" time="8.979">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
<failure message="synthetic.spec.ts:24:9 Should show dashboard" type="FAILURE">
<![CDATA[  [chromium] › Effiziente/synthetic.spec.ts:24:9 › Synthetic testing › Should show dashboard ───────

    Error: expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 0

      Array [
        "AccountsReceivable",
    -   "Security",
        "Config",
      ]

      41 |         const menusInPage = await page.locator(topMenuLocator).allInnerTexts();
      42 |         const menus = ['AccountsReceivable', 'Security', 'Config'];
    > 43 |         await expect(menusInPage).toEqual(menus);
         |                                   ^
      44 |     });
      45 |
      46 | });

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/synthetic.spec.ts:43:35

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 0

      Array [
        "AccountsReceivable",
    -   "Security",
        "Config",
      ]

      41 |         const menusInPage = await page.locator(topMenuLocator).allInnerTexts();
      42 |         const menus = ['AccountsReceivable', 'Security', 'Config'];
    > 43 |         await expect(menusInPage).toEqual(menus);
         |                                   ^
      44 |     });
      45 |
      46 | });

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/synthetic.spec.ts:43:35

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-chromium-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chromium" tests="1" failures="0" skipped="0" time="1.585" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.585">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chromium" tests="1" failures="0" skipped="0" time="1.042" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="1.042">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="chromium" tests="1" failures="0" skipped="0" time="1.089" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="1.089">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="firefox" tests="1" failures="0" skipped="0" time="5.457" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="5.457">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="firefox" tests="2" failures="0" skipped="0" time="7.226" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="4.099">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="3.127">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/synthetic.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="firefox" tests="1" failures="1" skipped="0" time="9.56" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/synthetic.spec.ts" time="9.56">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
<failure message="synthetic.spec.ts:24:9 Should show dashboard" type="FAILURE">
<![CDATA[  [firefox] › Effiziente/synthetic.spec.ts:24:9 › Synthetic testing › Should show dashboard ────────

    Error: expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 0

      Array [
        "AccountsReceivable",
    -   "Security",
        "Config",
      ]

      41 |         const menusInPage = await page.locator(topMenuLocator).allInnerTexts();
      42 |         const menus = ['AccountsReceivable', 'Security', 'Config'];
    > 43 |         await expect(menusInPage).toEqual(menus);
         |                                   ^
      44 |     });
      45 |
      46 | });

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/synthetic.spec.ts:43:35

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 0

      Array [
        "AccountsReceivable",
    -   "Security",
        "Config",
      ]

      41 |         const menusInPage = await page.locator(topMenuLocator).allInnerTexts();
      42 |         const menus = ['AccountsReceivable', 'Security', 'Config'];
    > 43 |         await expect(menusInPage).toEqual(menus);
         |                                   ^
      44 |     });
      45 |
      46 | });

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/synthetic.spec.ts:43:35

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-firefox-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="firefox" tests="1" failures="0" skipped="0" time="1.642" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.642">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="firefox" tests="1" failures="0" skipped="0" time="1.26" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="1.26">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="firefox" tests="1" failures="0" skipped="0" time="0.743" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.743">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="webkit" tests="1" failures="0" skipped="0" time="6.356" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="6.356">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="webkit" tests="2" failures="0" skipped="0" time="9.063" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="4.628">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="4.435">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/synthetic.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="webkit" tests="1" failures="1" skipped="0" time="13.576" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/synthetic.spec.ts" time="13.576">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
<failure message="synthetic.spec.ts:24:9 Should show dashboard" type="FAILURE">
<![CDATA[  [webkit] › Effiziente/synthetic.spec.ts:24:9 › Synthetic testing › Should show dashboard ─────────

    Error: expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 0

      Array [
        "AccountsReceivable",
    -   "Security",
        "Config",
      ]

      41 |         const menusInPage = await page.locator(topMenuLocator).allInnerTexts();
      42 |         const menus = ['AccountsReceivable', 'Security', 'Config'];
    > 43 |         await expect(menusInPage).toEqual(menus);
         |                                   ^
      44 |     });
      45 |
      46 | });

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/synthetic.spec.ts:43:35

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    Error: expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 0

      Array [
        "AccountsReceivable",
    -   "Security",
        "Config",
      ]

      41 |         const menusInPage = await page.locator(topMenuLocator).allInnerTexts();
      42 |         const menus = ['AccountsReceivable', 'Security', 'Config'];
    > 43 |         await expect(menusInPage).toEqual(menus);
         |                                   ^
      44 |     });
      45 |
      46 | });

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/synthetic.spec.ts:43:35

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-synthetic-Synthetic-testing-Should-show-dashboard-webkit-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="webkit" tests="1" failures="0" skipped="0" time="1.951" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.951">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="webkit" tests="1" failures="0" skipped="0" time="2.277" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="2.277">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-22T03:57:25.890Z" hostname="webkit" tests="1" failures="0" skipped="0" time="1.042" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="1.042">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>