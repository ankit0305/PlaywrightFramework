<testsuites id="" name="" tests="36" failures="1" skipped="2" errors="0" time="234.881974">
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="0" skipped="0" time="9.735" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="9.735">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="pw-webkit:latest:MacOS Monterey@lambdatest" tests="1" failures="0" skipped="0" time="10.633" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="10.633">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="0" skipped="0" time="19.94" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="19.94">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Api/servers.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="2" failures="0" skipped="0" time="12.135" errors="0">
<testcase name="Servers › Should add a server" classname="Effiziente/Api/servers.spec.ts" time="7.714">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;299444&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Hoeger Inc&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://valid-herbs.net&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Row with the key: 299444 exists">
</property>
</properties>
<system-out>
<![CDATA[index:2
]]>
</system-out>
</testcase>
<testcase name="Servers › Should edit a server" classname="Effiziente/Api/servers.spec.ts" time="4.421">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;658825&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Cartwright, Bosco and Dibbert&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://sociable-angel.name&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Row with the key: 658825 exists">
</property>
</properties>
<system-out>
<![CDATA[index:2
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="2.206" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="2.206">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="2" failures="0" skipped="0" time="3.757" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="1.915">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="1.842">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="4.949" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="4.949">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="5.132" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="5.132">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="17.862" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="17.862">
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="1.239" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.239">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.851" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="0.851">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.746" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.746">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Api/servers.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="2" failures="0" skipped="0" time="53.935" errors="0">
<testcase name="Servers › Should add a server" classname="Effiziente/Api/servers.spec.ts" time="24.754">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;978856&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Tromp, Heaney and Moore&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://shoddy-laryngitis.com/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Server id should be a number greater than 1">
</property>
<property name="Assert" value="Row with the key: 978856 exists">
</property>
</properties>
<system-out>
<![CDATA[index:2
]]>
</system-out>
</testcase>
<testcase name="Servers › Should edit a server" classname="Effiziente/Api/servers.spec.ts" time="29.181">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;139781&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Ondricka Group&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://chubby-injustice.org&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Row with the key: 139781 exists">
</property>
</properties>
<system-out>
<![CDATA[index:2
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="0" time="7.99" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="7.99">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="2" failures="0" skipped="0" time="30.829" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="14.615">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="16.214">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="0" time="21.243" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="21.243">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="0" time="41.48" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="41.48">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0.259" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="0.259">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="0" time="1.336" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.336">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="0" time="0.934" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="0.934">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="firefox" tests="1" failures="0" skipped="0" time="0.657" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.657">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Api/servers.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="2" failures="1" skipped="0" time="112.716" errors="0">
<testcase name="Servers › Should add a server" classname="Effiziente/Api/servers.spec.ts" time="75.288">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Button" value="Click: &quot;Add&quot;">
</property>
<property name="InputText" value="Fill &quot;Key:&quot; with the value: &quot;895180&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Turner, Deckow and Swift&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://other-floor.org/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
</properties>
<failure message="servers.spec.ts:12:9 Should add a server" type="FAILURE">
<![CDATA[  [webkit] › Effiziente/Api/servers.spec.ts:12:9 › Servers › Should add a server ───────────────────

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:33

      31 |      */
      32 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 33 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      34 |             && response.status() == statusCode);
      35 |         return responsePromise;
      36 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:33:43)
        at ServerApi.waitForCreateServer (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:19:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:28:58
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:27:34

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:33

      31 |      */
      32 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 33 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      34 |             && response.status() == statusCode);
      35 |         return responsePromise;
      36 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:33:43)
        at ServerApi.waitForGetServers (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:26:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:29:55
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:27:34

    attachment #1: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: page.waitForResponse: Timeout 10000ms exceeded while waiting for event "response"

       at ../utils/ApiHelper.ts:33

      31 |      */
      32 |     waitForResponse(apiUrl: string, statusCode = 200, method: 'POST' | 'GET' | 'PUT' | 'DELETE' = 'GET') {
    > 33 |         const responsePromise = this.page.waitForResponse(response => response.url().includes(apiUrl) && response.request().method() == method
         |                                           ^
      34 |             && response.status() == statusCode);
      35 |         return responsePromise;
      36 |     }

        at ApiHelper.waitForResponse (/home/runner/work/PlaywrightFramework/PlaywrightFramework/utils/ApiHelper.ts:33:43)
        at ServerApi.waitForGetServers (/home/runner/work/PlaywrightFramework/PlaywrightFramework/api/Effiziente/Server.api.ts:26:31)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:29:55
        at AddServerPage.saveClick (/home/runner/work/PlaywrightFramework/PlaywrightFramework/pages/Effiziente/addServerPage.ts:27:27)
        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Api/servers.spec.ts:27:34

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Api-servers-Servers-Should-add-a-server-webkit-retry1/trace.zip]]
]]>
</system-out>
</testcase>
<testcase name="Servers › Should edit a server" classname="Effiziente/Api/servers.spec.ts" time="37.428">
<properties>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="Step" value="Create server with API">
</property>
<property name="Go To" value="Go to the servers page: &quot;https://effizientedemo.azurewebsites.net/Security/servers&quot;">
</property>
<property name="InputText" value="Fill &quot;key:&quot; with the value: &quot;370619&quot;">
</property>
<property name="InputText" value="Fill &quot;Name:&quot; with the value: &quot;Becker, Feil and Ziemann&quot;">
</property>
<property name="InputText" value="Fill &quot;Url:&quot; with the value: &quot;https://giant-emery.net/&quot;">
</property>
<property name="Button" value="Click: &quot;Save&quot;">
</property>
<property name="Assert" value="Success message is visible">
</property>
<property name="Assert" value="Row with the key: 370619 exists">
</property>
</properties>
<system-out>
<![CDATA[index:2
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="0" time="9.128" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="9.128">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="2" failures="0" skipped="0" time="31.61" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="18.987">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="12.623">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="0" time="22.482" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="22.482">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="0" time="24.043" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="24.043">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0.454" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="0.454">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="0" time="1.699" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.699">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="0" time="2.012" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="2.012">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-04-27T04:05:18.970Z" hostname="webkit" tests="1" failures="0" skipped="0" time="0.679" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.679">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill &quot;Username:&quot; with the value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>