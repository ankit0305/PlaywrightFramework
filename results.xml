<testsuites id="" name="" tests="30" failures="1" skipped="2" errors="0" time="131.73516800000002">
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chrome:latest:MacOS Catalina@lambdatest" tests="1" failures="0" skipped="0" time="10.868" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="10.868">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="pw-webkit:latest:MacOS Monterey@lambdatest" tests="1" failures="0" skipped="0" time="15.982" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="15.982">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chrome:latest:Windows 10@lambdatest" tests="1" failures="0" skipped="0" time="21.254" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="21.254">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="0" skipped="0" time="2.439" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="2.439">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="2" failures="0" skipped="0" time="15.281" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="10.973">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="4.308">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="1" skipped="0" time="43.396" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="43.396">
<failure message="login.spec.ts:6:9 Should show dashboard" type="FAILURE">
<![CDATA[  [chromium] › Effiziente/Synthetic/login.spec.ts:6:9 › Synthetic login testing › Should show dashboard 

    TimeoutError: locator.click: Timeout 20000ms exceeded.
    Call log:
      - waiting for locator('app-card-pie').getByRole('img')


      10 |         await page.getByPlaceholder('Password').fill('Demo');
      11 |         await page.getByRole('button', { name: 'Login' }).click();
    > 12 |         await page.locator('app-card-pie').getByRole('img').click({ timeout: 20_000 });
         |                                                             ^
      13 |
      14 |     });
      15 |

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Synthetic/login.spec.ts:12:61

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────

    Retry #1 ───────────────────────────────────────────────────────────────────────────────────────

    TimeoutError: locator.click: Timeout 20000ms exceeded.
    Call log:
      - waiting for locator('app-card-pie').getByRole('img')


      10 |         await page.getByPlaceholder('Password').fill('Demo');
      11 |         await page.getByRole('button', { name: 'Login' }).click();
    > 12 |         await page.locator('app-card-pie').getByRole('img').click({ timeout: 20_000 });
         |                                                             ^
      13 |
      14 |     });
      15 |

        at /home/runner/work/PlaywrightFramework/PlaywrightFramework/tests/Effiziente/Synthetic/login.spec.ts:12:61

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #3: trace (application/zip) ─────────────────────────────────────────────────────────
    test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/trace.zip
    Usage:

        npx playwright show-trace test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/trace.zip

    ────────────────────────────────────────────────────────────────────────────────────────────────
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|../test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium/trace.zip]]

[[ATTACHMENT|../test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/test-failed-1.png]]

[[ATTACHMENT|../test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/video.webm]]

[[ATTACHMENT|../test-results/Effiziente-Synthetic-login-Synthetic-login-testing-Should-show-dashboard-chromium-retry1/trace.zip]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="0" skipped="0" time="32.08" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="32.08">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="0" skipped="0" time="15.774" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="15.774">
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="0" skipped="0" time="1.221" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.221">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.878" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="0.878">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="chromium" tests="1" failures="0" skipped="0" time="0.679" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.679">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="0" time="4.584" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="4.584">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="2" failures="0" skipped="0" time="21.963" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="12.658">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="9.305">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="0" time="7.026" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="7.026">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="0" time="9.716" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="9.716">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="1" time="0.256" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="0.256">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="0" time="1.463" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="1.463">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="0" time="1.178" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="1.178">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="firefox" tests="1" failures="0" skipped="0" time="0.792" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.792">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/dashboard.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="0" time="11.155" errors="0">
<testcase name="Check Dashboard › Should show dashboard" classname="Effiziente/dashboard.spec.ts" time="11.155">
<properties>
<property name="Mock" value="Modify the summary with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Sumary Expiration&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 delay&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 total&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 5 type&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 1&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 2&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 Limit 3&quot; with fixed data">
</property>
<property name="Mock" value="Modify the &quot;Top 10 To Expire&quot; with fixed data">
</property>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="Step" value="Compare snapshot: dashboard.png with maxDiffPixelsRatio: 0.1">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/menu.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="2" failures="0" skipped="0" time="16.352" errors="0">
<testcase name="Normal user › Should returns user menu" classname="Effiziente/menu.spec.ts" time="10.616">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to: AccountsReceivable,Config">
</property>
</properties>
</testcase>
<testcase name="Admin user › Should returns admin menu" classname="Effiziente/menu.spec.ts" time="5.736">
<properties>
<property name="Go To" value="Go to the page: &quot;https://effizientedemo.azurewebsites.net/AccountsReceivable/dashboard&quot;">
</property>
<property name="PirmeFacesMenu" value="Get top menus">
</property>
<property name="Assert" value="Menu is equal to:AccountsReceivable,Security,Config">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="0" time="6.167" errors="0">
<testcase name="Synthetic login testing › Should show dashboard" classname="Effiziente/Synthetic/login.spec.ts" time="6.167">
</testcase>
</testsuite>
<testsuite name="Effiziente/Synthetic/menu.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="0" time="7.047" errors="0">
<testcase name="Synthetic testing › Should show dashboard" classname="Effiziente/Synthetic/menu.spec.ts" time="7.047">
<properties>
<property name="Navigation" value="Go to:https://effizientedemo.azurewebsites.net">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="Effiziente/ZeroStep/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="1" time="0.407" errors="0">
<testcase name="AI Zero Step › Should show dashboard after login" classname="Effiziente/ZeroStep/login.spec.ts" time="0.407">
<properties>
<property name="skip" value="Zero Steps only works in chromium">
</property>
</properties>
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="Google/searchLocale.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="0" time="2.198" errors="0">
<testcase name="Locale translations › Translations with locale and time zone id" classname="Google/searchLocale.spec.ts" time="2.198">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.google.com&quot;">
</property>
<property name="Assert" value="Search button text is equal to: &quot;Buscar con Google&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/login.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="0" time="1.982" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/login.spec.ts" time="1.982">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
<testsuite name="SauceDemo/loginLambdaTestFixture.spec.ts" timestamp="2024-03-27T00:46:28.789Z" hostname="webkit" tests="1" failures="0" skipped="0" time="0.902" errors="0">
<testcase name="Login › Login with valid user load inventory page" classname="SauceDemo/loginLambdaTestFixture.spec.ts" time="0.902">
<properties>
<property name="Go To" value="Go to the page: &quot;https://www.saucedemo.com&quot;">
</property>
<property name="InputText" value="Fill: &quot;Username&quot; with value: &quot;standard_user&quot;">
</property>
<property name="InputPassword" value="Fill: &quot;Password with value: *****&quot;">
</property>
<property name="Button" value="Click: &quot;Login&quot;">
</property>
<property name="Assert" value="Check URL Page equal to: &quot;https://www.saucedemo.com/inventory.html&quot;">
</property>
</properties>
</testcase>
</testsuite>
</testsuites>